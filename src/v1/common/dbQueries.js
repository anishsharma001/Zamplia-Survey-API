// PRECISION CRON JOB QUERIES
module.exports = Object.freeze({
    UPSERT_PRECISION_CRON_SURVEYS: "INSERT INTO precisionSurveysByCountry ( SurveyId, ExternalName, prj_guid, end_date, sc_id, buyer_id, rr, IR, live_ir, total_completes, cc, CPI, device, ismultiple, LOI, P_payout, reward, LiveLink, Priority, isActive, status, country ) VALUES ?  ON DUPLICATE KEY UPDATE end_date = VALUES(end_date), rr = VALUES(rr), IR = VALUES(IR), live_ir = VALUES(live_ir),total_completes = VALUES(total_completes), cc = VALUES(cc),CPI = VALUES(CPI), LOI = VALUES(LOI), P_payout = VALUES(P_payout), LiveLink = VALUES(LiveLink),  Priority = VALUES(Priority)",
    UPSERT_PRECISION_CRON_SURVEYS_INTO_STUDIES: "INSERT INTO studies ( _id, studyName, description, orignalRequirment, firstPartyUrl, firstPartyUrlTest, fees, status, loi, ir, isActive,  apiType, country, apiClientId, apiSurveyId,surveyEndDate,device, isCountryCheck) VALUES ?  ON DUPLICATE KEY UPDATE orignalRequirment = VALUES(orignalRequirment), firstPartyUrl = VALUES(firstPartyUrl), fees = VALUES(fees), loi = VALUES(loi),ir = VALUES(ir), updatedAt = VALUES(updatedAt), status = VALUES(status), isActive = VALUES(isActive), device = VALUES(device)",
    UPSERT_SURVEYS_CRON_MCQ: "INSERT INTO studies ( _id, studyName, description, orignalRequirment, firstPartyUrl, firstPartyUrlTest, fees, status, loi, ir, isActive,  apiType, country, apiClientId, apiSurveyId,surveyEndDate,device, isCountryCheck, EPC, isgroupsecurityactive, clientSurveyGUID, allowDemo, device_v2, isPIIActive,lucidClientName, lang_code,studytypes,isRouterEligible,clientType) VALUES ?  ON DUPLICATE KEY UPDATE orignalRequirment = VALUES(orignalRequirment), firstPartyUrl = VALUES(firstPartyUrl), fees = VALUES(fees), loi = VALUES(loi),ir = VALUES(ir), updatedAt = VALUES(updatedAt), status = VALUES(status), isActive = VALUES(isActive), device = VALUES(device), EPC = VALUES(EPC), isgroupsecurityactive = VALUES(isgroupsecurityactive), clientSurveyGUID = VALUES(clientSurveyGUID), allowDemo = VALUES(allowDemo), device_v2 = VALUES(device_v2), isPIIActive = VALUES(isPIIActive), lucidClientName = VALUES(lucidClientName), lang_code = VALUES(lang_code),isRouterEligible=VALUES(isRouterEligible),clientType = VALUES(clientType)",
    UPSERT_SURVEYS_CRON_IPSOS: "INSERT INTO studies ( _id, studyName, description, orignalRequirment, firstPartyUrl, firstPartyUrlTest, fees, status, loi, ir, isActive,  apiType, country, apiClientId, apiSurveyId,surveyEndDate,device, isCountryCheck, EPC, isgroupsecurityactive, clientSurveyGUID, allowDemo, lang_code) VALUES ? ON DUPLICATE KEY UPDATE firstPartyUrl = VALUES(firstPartyUrl), fees = VALUES(fees), loi = VALUES(loi),ir = VALUES(ir), updatedAt = VALUES(updatedAt), status = VALUES(status), isActive = VALUES(isActive), device = VALUES(device), EPC = VALUES(EPC), clientSurveyGUID = VALUES(clientSurveyGUID), allowDemo = VALUES(allowDemo), lang_code = VALUES(lang_code)",
    UPSERT_SURVEYS_CRON_UNIMRKT: "INSERT INTO studies ( _id, studyName, description, orignalRequirment, firstPartyUrl, firstPartyUrlTest, fees, status, loi, ir, isActive,  apiType, country, apiClientId, apiSurveyId,surveyEndDate,device, isCountryCheck, EPC, isgroupsecurityactive, clientSurveyGUID, allowDemo, isPIIActive, lang_code) VALUES ? ON DUPLICATE KEY UPDATE firstPartyUrl = VALUES(firstPartyUrl), fees = VALUES(fees), loi = VALUES(loi),ir = VALUES(ir), updatedAt = VALUES(updatedAt), status = VALUES(status), isActive = VALUES(isActive), device = VALUES(device), EPC = VALUES(EPC), clientSurveyGUID = VALUES(clientSurveyGUID), allowDemo = VALUES(allowDemo), isPIIActive = VALUES(isPIIActive), lang_code = VALUES(lang_code)",
    INSERT_QUOTAS_PRECISION_CRON_SURVEYS: "DELETE FROM precisionSurveysQuotas WHERE SurveyId IN (?); INSERT INTO precisionSurveysQuotas ( SurveyId, cc, demographic, q_name, q_id, q_guid, tc, terms, oqs, isactive ) VALUES ? ",
    INSERT_QUOTAS_PRECISION_CRON_SURVEYS_V1: "DELETE FROM precisionDemosByQuota WHERE SurveyId IN (?); INSERT INTO precisionDemosByQuota ( quotaId, SurveyId, q_name, cmas, dmas, msas, zips, county, gender, states, country, min_age, max_age, regions, ethnicity, isQstAvailable, qstId, optIds ) VALUES ? ",
    UPSERT_P_TWO_SAMPLE_SURVEYS_INTO_STUDIES : "INSERT INTO studies ( _id,allowDemo,studyName, description, orignalRequirment, firstPartyUrl, firstPartyUrlTest, fees, status, loi, ir,isActive,apiType ,country,apiClientId,apiSurveyId,surveyEndDate,device, isCountryCheck, isgroupsecurityactive) VALUES ?  ON DUPLICATE KEY UPDATE orignalRequirment = VALUES(orignalRequirment), firstPartyUrl = VALUES(firstPartyUrl), fees = VALUES(fees), loi = VALUES(loi),ir = VALUES(ir), updatedAt = VALUES(updatedAt), status = VALUES(status), isActive = VALUES(isActive) ,device=VALUES(device), isgroupsecurityactive=VALUES(isgroupsecurityactive)",
    UPSERT_P_TWO_SAMPLE_SURVEYS_QUALIFICATIONS : "INSERT INTO ptwosamplequalifications ( studyId, qualificationName, answerIds) VALUES ? ON DUPLICATE KEY UPDATE answerIds = VALUES(answerIds)",
    UPSERT_P_TWO_SAMPLE_SURVEYS_QUOTAS : "INSERT INTO ptwosamplequotas ( studyId, quotaId, completes) VALUES ? ON DUPLICATE KEY UPDATE completes = VALUES(completes)",
    UPSERT_P_TWO_SAMPLE_SURVEYS_QUOTAS_QUALIFICATIONS : "INSERT INTO ptwosamplequotasqualifications ( studyId, quotaId, qualificationName, answerIds) VALUES ? ON DUPLICATE KEY UPDATE answerIds = VALUES(answerIds)",
    UPSERT_P_TWO_SAMPLE_SURVEYS_GROUP_SECURITY : "INSERT INTO ptwosamplegroupsecurity ( studyId, groupIds) VALUES ? ON DUPLICATE KEY UPDATE groupIds = VALUES(groupIds)",
    UPSERT_MAPPING_FOR_P_TWO_SAMPLE : 'INSERT INTO mappings (sidTid, studyId, thirdPartyId, _id, successUrl, terminateUrl, overQuotaUrl, securityTerminate, studyUrl, studyTestUrl, createdAt, updatedAt, requirement, totalQuota, vendorCpi) VALUES ? ON DUPLICATE KEY UPDATE updatedAt = VALUES(updatedAt)',
    UPSERT_TOLUNA_SURVEYS : "INSERT INTO studies (_id, allowDemo, studyName, description, orignalRequirment, firstPartyUrl, firstPartyUrlTest, fees, status, loi, ir, createdAt, updatedAt, isActive, uniqueLink, allowRouter, groupsecurity, isgroupsecurityactive, lang_code, client, isLoi, LoiCheckOn, isTestMode, apiType, country, apiClientId, apiSurveyId, surveyEndDate, device, isCountryCheck, studytypes, isReContactStudy) VALUES ? ON DUPLICATE KEY UPDATE isReContactStudy = VALUES(isReContactStudy), description = VALUES(description), orignalRequirment = VALUES(orignalRequirment), fees = VALUES(fees), loi = VALUES(loi), ir = VALUES(ir), updatedAt = VALUES(updatedAt), groupsecurity = VALUES(groupsecurity), isgroupsecurityactive = VALUES(isgroupsecurityactive), surveyEndDate = VALUES(surveyEndDate), device = VALUES(device), studytypes = VALUES(studytypes), status = VALUES(status)",
    UPSERT_TOLUNA_SURVEY_WAVE_EXCLUSIONS : "INSERT INTO tolunawaveexclusion (pSid, surveyId, excludedSurveyId, participantsStatus, updatedAt) VALUES ? ON DUPLICATE KEY UPDATE participantsStatus = VALUES(participantsStatus), updatedAt = VALUES(updatedAt)",
    UPSERT_SURVEYS_CRON_Elicit: "INSERT INTO studies ( _id, studyName, description, orignalRequirment, firstPartyUrl, firstPartyUrlTest, fees, status, loi, ir, isActive, apiType, lang_code, country,apiSurveyId, apiClientId,vendorSharedQuota ,device, isCountryCheck, EPC, isgroupsecurityactive, clientSurveyGUID, allowDemo, clientType, Client, isSampleChainReview, categoryId) VALUES ? ON DUPLICATE KEY UPDATE firstPartyUrl = VALUES(firstPartyUrl), firstPartyUrlTest = VALUES(firstPartyUrlTest), fees = VALUES(fees), loi = VALUES(loi),ir = VALUES(ir), updatedAt = VALUES(updatedAt), status = VALUES(status), isActive = VALUES(isActive), device = VALUES(device), EPC = VALUES(EPC), clientSurveyGUID = VALUES(clientSurveyGUID), allowDemo = VALUES(allowDemo), categoryId = VALUES(categoryId)",
    UPSERT_SURVEYS_CRON_INNOVATE: "INSERT INTO studies ( _id, studyName, description, orignalRequirment, firstPartyUrl, firstPartyUrlTest, fees, status, loi, ir, isActive,  apiType, country, apiClientId, apiSurveyId,surveyEndDate,device, isCountryCheck, EPC, isgroupsecurityactive, clientSurveyGUID, allowDemo, isPIIActive, lang_code, client, vendorSharedQuota,isSampleChainReview, categoryId,isRouterEligible) VALUES ? ON DUPLICATE KEY UPDATE firstPartyUrl = VALUES(firstPartyUrl), firstPartyUrlTest = VALUES(firstPartyUrlTest), fees = VALUES(fees), loi = VALUES(loi),ir = VALUES(ir), updatedAt = VALUES(updatedAt), status = VALUES(status), isActive = VALUES(isActive), device = VALUES(device), EPC = VALUES(EPC), clientSurveyGUID = VALUES(clientSurveyGUID), allowDemo = VALUES(allowDemo), isPIIActive = VALUES(isPIIActive), lang_code = VALUES(lang_code), vendorSharedQuota = VALUES(vendorSharedQuota), surveyEndDate = VALUES(surveyEndDate), country = VALUES(country), categoryId = VALUES(categoryId),isRouterEligible=VALUES(isRouterEligible)",
    UPSERT_MORNING_CONSULT_SURVEYS_INTO_STUDIES : "INSERT INTO studies ( _id,allowDemo,studyName, description, orignalRequirment, firstPartyUrl, firstPartyUrlTest, fees, status, loi, ir,isActive,apiType ,country,apiClientId,client,apiSurveyId,surveyEndDate,device, isCountryCheck, isgroupsecurityactive, userGUID, lang_code,studytypes,isRouterEligible,lucidClientName,clientType) VALUES ?  ON DUPLICATE KEY UPDATE orignalRequirment = VALUES(orignalRequirment), firstPartyUrl = VALUES(firstPartyUrl), fees = VALUES(fees), loi = VALUES(loi),ir = VALUES(ir), updatedAt = VALUES(updatedAt), status = VALUES(status), isActive = VALUES(isActive) ,device=VALUES(device), isgroupsecurityactive=VALUES(isgroupsecurityactive), userGUID=VALUES(userGUID), lang_code=VALUES(lang_code),isRouterEligible=VALUES(isRouterEligible),lucidClientName=VALUES(lucidClientName),clientType=VALUES(clientType)",
    UPSERT_SURVEYS_CRON_REPDATA: "INSERT INTO studies ( _id, studyName, description, orignalRequirment, fees, status, loi, ir, isActive,  apiType, country, apiClientId, apiSurveyId,surveyEndDate,device, isCountryCheck, EPC, isgroupsecurityactive, clientSurveyGUID, allowDemo, isPIIActive, lang_code,isRouterEligible) VALUES ? ON DUPLICATE KEY UPDATE fees = VALUES(fees), loi = VALUES(loi),ir = VALUES(ir), updatedAt = VALUES(updatedAt), status = VALUES(status), isActive = VALUES(isActive), device = VALUES(device), isCountryCheck = VALUES(isCountryCheck), EPC = VALUES(EPC), clientSurveyGUID = VALUES(clientSurveyGUID), allowDemo = VALUES(allowDemo), isPIIActive = VALUES(isPIIActive), lang_code = VALUES(lang_code),isRouterEligible=VALUES(isRouterEligible)",
});


